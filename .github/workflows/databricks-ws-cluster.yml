  name: Create Databricks Workspace and Cluster
  
  on:
   pull_request:
    paths:
     - environments/**
    types:
     - opened
     - edited
     - reopened
     - synchronize
    branches:
     - main
   workflow_dispatch:
  
  jobs:
   plan-dev:
    name: 'Plan Application Infrastructure for Development Environment'
    runs-on: ubuntu-latest
    steps:
     - name: Checkout repository
       uses: actions/checkout@v2
  
     - name: Setup Terraform
       uses: hashicorp/setup-terraform@v1
       with:
        terraform_version: 1.1.0
  
     - name: Initialize Terraform
       run: terraform init
  
     - name: Terraform Format
       run: terraform fmt -check
  
     - name: Terraform Validate
       run: terraform validate
  
     - name: Terraform Plan
       id: terraform-plan
       run: terraform plan -out=tfplan -var-file=terraform.tfvars
  
     - name: Save Terraform Plan
       run: echo "::set-output name=tfplan::$(cat tfplan)"
  
     - name: Create Databricks Workspace and Cluster
       uses: praveenkumarsuresh5201/intactproject/.github/workflows/databricks-ws-cluster.yml@main
       with:
         gh_environment: dev
         storage_account_name: ""
         resource_group_name: datasanddlhrg01
         container_name: ""
         blob_name: ""
         working_directory: environments
         tf_vars_file: terraform.tfvars
         STATE_SUBSCRIPTION_ID: '31324520-9b0f-447e-98f4-c8ac3667708d'
         TFPLAN: ${{ steps.terraform-plan.outputs.tfplan }}
       env:
         ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
         ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
         ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
         ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
         AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
         TFPLAN_PAT: ${{ secrets.TFPLAN_PAT }}
         PAT: ${{ secrets.PAT }}
         TF_STATE_STORAGE_ACCESS_KEY: ${{ secrets.TF_STATE_STORAGE_ACCESS_KEY }}
